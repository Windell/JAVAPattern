设计模式用以适应变化,封装变化,工厂模式处理的是对象创建上可能存在的变化.

工厂方法模式,由子类来决定该创建的对象是什么.封装的是如何创建具体对象,是讲产品实现从使用中解耦.

工厂方法使用继承,将对象的创建委托给子类,子类实现对象的创建.
抽象对象使用组合，对象的创建被实现在工厂接口所暴露出来的方法中.

两种都通过减少应用程序对具体类之间的依赖促进松耦合.


依赖倒置原则：依赖抽象类,不依赖具体类.


pizzasimplefatory是一种简单的工厂模式,将对象的创建封装到一个单独的类中.
pizzafactorymethod是一个工厂方法模式的例子,表现在*Store类,由子类不同的区域来确定对象的创建方法
pizzaabstractfactory是一个抽向工厂模式的例子,表现在*Factory类,抽象接口来创建一个产品对象族
(这表现的是工厂类和具体产品类的一种组合关系).接口实现类创建对象的方法通常也是以"工厂方法"的模式进行的。