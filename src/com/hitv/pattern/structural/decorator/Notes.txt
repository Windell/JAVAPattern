Decorator(装饰模式)：
	动态地给一个对象添加一些额外的职责。就扩展功能而言， 它比生成子类方式更为灵活。
	
1. 多用组合，少用继承。
利用继承设计子类的行为，是在编译时静态决定的，而且所有的子类都会继承到相同的行为。
然而，如果能够利用组合的做法扩展对象的行为，就可以在运行时动态地进行扩展。
2. 类应设计的对扩展开放，对修改关闭

更多精彩
http://www.cnblogs.com/god_bless_you/archive/2010/06/10/1755212.html
http://java.chinaitlab.com/model/800588.html